var db = require('../libs/datastore')('category');var resErr = require('../libs/support').resErr;var Promise = require('bluebird');module.exports = {    create: function (data, res, next, callback) {        data.parent = data.parent || 'root';        var criteria = {            slug: data.slug,            parent: data.parent        };        this.get(criteria, next, function (result) {            if (result) return resErr(res, 400, 'Категория с таким название уже существует');            db.create(data, callback);        })    },    get: function (criteria, next, callback) {        db.findOne(criteria, function (err, categ) {            if (err) return next(err);            callback(categ);        })    },    list: function (criteria, callback) {        db.findAll(criteria, callback);    },    update: function (id, updateCat, callback) {        db.update(id, updateCat, callback)    },    add: function (id, subCat, callback) {        db.find(id, function (err, result) {            if (err) return callback(err);            result.children.push(subCat);            db.update(result.uuid, result, callback);        })    },    remove: function (id, res, callback) {        db.find(id, function (err, result) {            if (err) return callback(err);            if (!result) return resErr(res, 404, 'Not Found');            db.findAll({ parents: { $in: [id] } },function (err, categs) {                if (err) return res.json(err);                Promise.map(categs, remove).then(function () {                    db.remove(id, callback);                })            })        });    }};var remove = Promise.promisify(function (categ, arr, ind, cb) {    db.remove(categ.uuid, cb);});